
Title         : OGF Project
Author        : Richard Ketchersid
Logo          : True


~ MathDefs
\newcommand{\Z}{\mathbb{Z}}
~


[TITLE]


# Combinatorial Classes

A *combinatorial class*, $A$, is simply a set of objects and a size function denoted $|a|$ for $a$ in $A$. 

The simplest example is a class with one objects of size 1. This can be denoted $A=\{\bullet\}$ where $|\bullet|=1$. 

Simple combinatorial classes can be combined to create more complicated classes. Let $A$ and $B$ be combinatorial classes, then:

* $A+B$ is the *disjoint union* of $A$ and $B$.
* $A\times B$ is the *cross product* of $A$ and $B$, so $c\in A\times B$ iff $c = (a,b)$ where $a\in A$ and $b\in B.$ If $c=(a,b)\in A\times B$, then $|c|=|a|+|b|$. 
* $SEQ(A)$ is the class of sequences of objects from $A$ and if $(a_1,\ldots,a_k)\in SEQ(A)$, then $|(a_1,\ldots,a_k)|=|a_1|+\cdots+|a_k|$.

$SEQ(A)$ has a size $0$ object we are calling $\emptyset$ or "null sequence". This is an object of size 0. We also set $A^0 = \{\emptyset\}$, this is a class containing on size 0 object.

~~ Example
Let $A=\{\bullet\}$ and $B=\{\circ\}$ with $|\bullet|=|\circ|=1$.   

* $C = A+B = \{\circ, \bullet\}$, so $C$ is a class with two objects, each of size 1.
* $D = A\times B = \{(\bullet,\circ)\}$. Rather than writing $(\bullet,\circ)$ we can just write $\bullet\circ$. So $D$ is a class with one object of size 2.
* $A^n = A\times A \cdots \times A$ ($n$ times). So $A^n=\{\underbrace{\bullet\bullet\cdots\bullet}_{n\text{-times}}\}.$ 
* $SEQ(A)=\{\emptyset, \bullet, \bullet\bullet,\ldots\}=\{\emptyset\}+A+A^2+\cdots$

~~ Begin Note
Note that $SEQ(\bullet)$ is a representative of the non-negative integers. We will take the non-negative integers to simply be this class and denote it $\Z^*.$ Similarly, $\Z^+=SEQ_{\geq1}(\bullet).$ 
~~ End Note
~~


**Exercise** List the elements in $SEQ(\{\circ,\bullet\})$
of size 1, 2, 3, and 4. How many elements are there in $SEQ(\{\circ,\bullet\})$ of size $n$? 


## Change as a combinatorial class

Let NICKEL={5&cent;}, be the combinatorial class consisting of a single nickel whose size is 5. Define $\text{NICKELS} = SEQ(\text{NICKEL})$ is the class of sequences of zero or more nickels. The size of the object (sequence) "5&cent; 5&cent; 5&cent;" is naturally 15. 

Similarly, there are classes PENNIES, DIMES, and QUARTERS.

Consider now the class 
~~ Equation {#eq-change-comb}
\text{CHANGE} = \text{PENNIES}\times\text{NICKELS}\times\text{DIMES}\times\text{QUARTERS}
~~
An object in CHANGE might look like "1&cent; 1&cent; 1&cent; 1&cent; 1&cent; 5&cent; 5&cent; 5&cent; 10&cent; 10&cent; 10&cent; 25&cent;  25&cent;". Note that the size of this object is 100 and this is one (of many) ways to make change for &dollar;1.

The goal here is to compute how many objects in Change have size 100. This will be precisely the number of ways to make change for &dollar;1.


# Generating Functions
A *combinatorial class* A is a set of objects where each object, a, has a size function denoted |a|. The *ordinary generating function (OGF)* for the class A is denoted A(z) and is defined as the *formal power series*
~~ Math
A(z)=\sum_{a\in A}z^{|a|}
~~
Collecting all terms for objects of the same size allows us to rewrite this as
~~ Math
A(z)=\sum_{n=0}^{\infty}A_n z^n,
~~ 
where $A_n$ is thus the number of objects in $A$ of size $n$. It is convenient at times to use the notation $[z^n]A(z)$ for the coefficient of $z^n$ in $A(z)$.



If $A= \{\bullet\}$ the OGF for this class is just $A(z) = z$. To build more interesting combinatorial classes and associate OGFs with them we need a few principals. 

1) If $A$ and $B$ are combinatorial classes, then $A + B$ is the disjoint union of $A$ and $B$. The OGF for $A+B$ is $A(z)+B(z)$.
2) If $A$ and $B$ are combinatorial classes, then $A\times B$ is the class of all ordered pairs $c=(a,b)$ for $a\in A$ and $b\in B$ where $|c|=|a|+|b|$. The OGF for $A\times B$ is just $A(z)\cdot B(z)$.
3) If $A$ is a combinatorial class, then $SEQ(A)$ is the class consisting of all sequences of objects from $A$ (with repetition). The OGF for $SEQ(A)$ is $\frac{1}{1 - A(z)}$.

**Exercise** Verify the three facts above.

# Simple examples.

~~ Begin Example {#Int; caption: "Sets of integers as  combinatorial classes"}


As discussed above, if we start with $A$ being the class with a single object of size 1, then we can denote this by $A = \{\bullet\}$ with $|\bullet|=1$. The finite sequences from $A$, $SEQ(A)$, is  
~~ Math
  Z = SEQ(\bullet) = \emptyset,  \bullet,  \bullet\bullet, \bullet\bullet\bullet, \cdots
~~

Here $\emptyset$ denotes the *null* object with size 0, so the OGF for $E = \{\emptyset\}$ is simply $E(z) = z^0 = 1$.

We know that if $Z=SEQ(\bullet)$, then
~~ Math
Z(z) = \sum_{n=0}^\infty  z^n = \frac{1}{1 - z}
~~

The positive integers would be 
~~ Math
  Z_{> 0} = SEQ_{>0}(\bullet)
~~
with OGF
~~ Math
  Z(z) - 1 = \frac{z}{1-z} 
~~
The even integers would be
~~ Math
  Even = SEQ_{\text{even}}(\bullet)
~~
with OGF
~~ Math
  z^0+z^2+\cdots = \sum_{n=0}^\infty (z^2)^n = \frac{1}{1-z^2}
~~


~~ End Example


~~ Begin Example {#Compositions; caption: "Compositions of integers"}
  
A composition of an integer $n$ is a sequence of positive integers $(x_1,x_2,\cdots,x_k)$ so that $\sum x_i = n$. 

How many compositions of $n$ are there? 

A composition is sequence of integers $\geq 1$. That is $C=SEQ(Z_{\geq1})$, so the OGF is
~~ Math
 C(z)=\frac{1}{1-Z_{\geq1}(z)}=\frac{1}{1-\frac{z}{1-z}}=\frac{1-z}{1-2z}.
~~
**Exercise** Show that $[z^n]C(z)=2^{n-1}$. 
~~ End Example


~~ Begin Example {#BinSeq; caption: "Binary strings as a combinatorial class"}
  
Start with two objects, each of size 1, $A = \{\circ,\bullet\}$. The OGF for $A$ is $z + z=2z$. A binary string, $B$,  is just a sequence of atoms from $A$. That is
~~ Math
B = SEQ(\circ,\bullet)=SEQ(A)
~~
and so the OGF for binary strings is 
~~ Math
\frac{1}{1-A(z)}=\frac{1}{1-2z} = \sum_{n=0}^\infty (2z)^n=\sum_{n=0}^\infty 2^nz^n.
~~
 So it is clear that $B_n=2^n$. (A well known fact.)

Alternatively, $B = \emptyset + A \times B$, which yields
~~ Math
B(z) = 1 + 2z\cdot B(z).
~~
Solving this for $B(z)$ also leads to 
~~ Math
B(z) = \frac{1}{1-2z}
~~
~~ End Example

~~ Begin Example {#BinStrGen; caption: "Generalizations"}


Consider a variant of this, $B_{\leq 2}$, are the binary strings with no more than 2 consecutive $\bullet$'s. This can be described as 
~~ Math
B_{\leq2} = \emptyset + \circ\times \cdot B_{\leq2} + \bullet\circ \cdot B_{\leq2} 
+\bullet\bullet\circ \cdot B_{\leq2}.
~~
Solving  this gives 
~~ Math 
B_{\leq2}(z) = 1 + z\cdot B_{\leq 2}(z) + z^2\cdot B_{\leq 2}(z)+z^3 B_{\leq2}
~~
which then yields
~~ Math
B_{\leq2}(z)  = \frac{1}{1 - z - z^2 - z^3}
~~

**Exercise** Write out the elements of $B_{\leq2}$ up to size 5, then use SAGE/Python to expand $B_{\leq2}$ as a power series centered a 0 and check that the first 5 coefficients are correct.

This construction could be generalized to "no more than n consecutive $\bullet$'s", etc.
content
~~ End Example


# Polya's Making Change

The problem here is to find how many distinct ways there are to make change for &dollar;1 using pennies, nickels, dimes, and quarters. Order does not matter, so for example, 

> 5&cent; 5&cent; 5&cent; 10&cent; 25&cent; 25&cent; 25&cent; 

is the same as 

>25&cent; 5&cent; 5&cent; 25&cent; 25&cent; 10&cent; 5&cent; 

in any case these are 3&times;5&cent;, 1&times;10&cent;, and 3&times;25&cent;.  

It should be clear now that if $A = \{a\}$ and $|a|=k$ and if $B=SEQ(A)$, then 
~~ Math
B(z) = \frac{1}{1-z^k}=1+z^k+z^{2k}+z^{3k}\cdots
~~
Thus the OGF for the class DIMES is $D(z)=\frac{1}{1-z^{10}}$ and similarly for the rest of the classes PENNIES, NICKELS, and QUARTERS. The combinatorial class associated with CHANGE was discussed above.  OGF for the class CHANGE is:
~~ Equation {#eq-change}
\begin{aligned} 
C(z)&=\frac{1}{1-z}\frac{1}{1-z^5}\frac{1}{1-z^{10}}\frac{1}{1-z^{25}}
    =\frac{1}{(1-z)(1-z^5)(1-z^{10})(1-z^{25})}\\
    &=(1+z+z^2+\cdots)(1 + z^5 + z^{10} + \cdots)(1 + z^{10}+z^{20}+\cdots)(
      1+z^{25}+z^{50} + \cdots)
\end{aligned}
~~
So our goal is to find $[z^{100}]C(z)$.

With [SAGE](sagecell.sagemath.org) the [following](https://goo.gl/jRvEby) code extracts the answer.

``` python
  p(z) = sum([z**i for i in range(101)])
  n(z) = sum([z**(5*i) for i in range(101) if 5*i <= 100])
  d(z) = sum([z**(10*i) for i in range(101) if 10*i <= 100])
  q(z) = sum([z**(25*i) for i in range(101) if 25*i <= 100])
  r(z) = (p*q*d*n).expand()
  r.coefficient(z^100)(z)
```

A more sophisticated version that allows user to enter different denominations easily is available [here](https://goo.gl/Q24yP5).

## Polya's Recursive Solution {#polya}

The trick of Polya was the following. Suppose 
~~ Math
  B(z) = A(z)\cdot \dfrac{1}{1-z^m},
~~
then
~~ Math
  B(z) - B(z)\cdot z^m = A(z).
~~
This yields
~~ Math
  A_n = B_n - B_{n-m}
~~
or more useful
~~ Math
  B_n = A_n + B_{n - m}.
~~
So if we know $A_n$ and $B_{n-m}$, then we can recursively compute $B_n$. 

~~ Begin Example
  Let's apply this to the making change for &dollar;1 problem. Suppose first that we simply wanted the ways to make change with PENNIES and NICKLES, then we want $[z^{100}]B(z)$ where

~~ Math
  B(z) = \frac{1}{1-z}\cdot\frac{1}{1-z^5}.
~~
We can concentrate on $B_n$ where $n$ is a multiple of 5 ad get
~~ Math
  B_{5 n} = A_{5 n} + B_{5 n-5} = A_{5\cdot n} + B_{5 (n-1)},
~~
where $A(z)$ is the OGF for PENNIES and so $A_n = 1$ for all $n$. The pattern is clear from the first few terms 
~ Snippet
  \begin{align*}
    B_0 &= 1 \\
    B_5 &= P_5 + B_0 = 1 + 1 = 2\\ 
    B_{10} &= P_{10} + B_5 = 1 + 2 = 3\\
    \cdots&\\
    B_{5 n} & = n + 1
  \end{align*}
~
So it is clear that $[z^{5i}]B=i$.

Now throw dimes in as well, let 
~~ Math
  C(z) = \frac{1}{1-z}\cdot\frac{1}{1-z^5}\cdot\frac{1}{1-z^{10}}
~~
We have
~ Snippet
  \begin{align*}
    C_0 &= 1 \\
    C_5 &= B_5 = 2\\ 
    C_{10} &= B_{10} + C_0 = 3 + 1 = 4\\
    C_{15} &= B_{15} + C_5 = 4 + 2 = 6\\
    C_{20} &= B_{20} + C_{10} = 5 + 4 = 9\\
    C_{25} &= B_{25} + C_{15} = 6 + 6 = 12\\
    \cdots&\\
  \end{align*}
~
The pattern is not obvious here, but this can be carried out 20 iterations until $C_{100}$ is obtained.

Next throw in quarters. Let 
~~ Math
   D(z) = \frac{1}{1-z}\cdot\frac{1}{1-z^5}\cdot\frac{1}{1-z^{10}}
   \cdot\frac{1}{1-z^{25}}
~~
Here we can get away with 4 computations
~ Snippet
  \begin{align*}
    D_0 &= 1 \\
    D_{25} &= C_{25} + D_{0} = 12 + 1 = 13\\ 
    D_{50} &= C_{50} + D_{25} = 36 + 13 = 49\\
    \cdots&\\
  \end{align*}
~
   
~~ End Example


# Your goal.

 1. Complete the computations of $C_{5i}$ and then $D_{25i}$ from Section [#polya] to compute $D_{100}$, this is the number of ways to make change for &dollar;1. 
 
 2. The change for &dollar;1 problem can be rephrased as finding the number of partitions of 100 into sums of 1's, 5's, 10's, and 25's. The general problem of partitioning a number into sums of smaller numbers from a fixed set of numbers has many applications. Do a little research, or be creative, and find an application of partitioning integers. Set up the problem as was done above for finding the number of ways to find change for &dollar;1. In particular make sure and do the following:

  a. Describe the corresponding combinatorial class. (As in [#eq-change-comb] above.)
  b. Give the OGF. (As in [#eq-change] above.)
  c. Solve the problem you have posed as in Section [#polya].

~~ Begin Example
  Here are a couple of examples: 

  * How many ways are there to measure a cup with a teaspoon, tablespoon, and 1/3 cup measure?
  * How many ways are there to split up a group of 99 kids into groups of size 3, 7, and 11?


~~ End Example















































































 
























































